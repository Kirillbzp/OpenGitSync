@page "/edit-project/{projectId}"
@using OpenGitSync.Shared.DataTransferObjects;
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<PageTitle>Edit Project</PageTitle>

<h3>Edit Project</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

@if (Project != null)
{
    <div class="card mt-4">
        <div class="card-body">
            <h5 class="card-title">Project Information</h5>

            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" class="form-control" @bind="Project.Name" />
            </div>

            <div class="form-group">
                <label for="description">Description</label>
                <textarea id="description" class="form-control" @bind="Project.Description"></textarea>
            </div>

            <button type="submit" class="btn btn-primary" @onclick="HandleUpdateProject">Save Changes</button>
        </div>
    </div>
}
else
{
    <p>Loading project information...</p>
}

@code {
    private ProjectDto Project { get; set; }
    private string ErrorMessage { get; set; }
    [Parameter] public long ProjectId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadProject();
    }

    private async Task LoadProject()
    {
        // Make an API request to retrieve the project by ID
        var response = await HttpClient.GetFromJsonAsync<ProjectDto>($"/api/projects/{ProjectId}");

        if (response != null)
        {
            Project = response;
        }
        else
        {
            ErrorMessage = "Failed to load project information";
        }
    }

    private async Task HandleUpdateProject()
    {
        // Validate the form inputs
        if (string.IsNullOrWhiteSpace(Project.Name))
        {
            ErrorMessage = "Project name is required";
            return;
        }

        // Make an API request to update the project
        var response = await HttpClient.PutAsJsonAsync($"/api/projects/{Project.Id}", Project);

        if (response.IsSuccessStatusCode)
        {
            // Project update successful, redirect to the project details page or perform other actions
            NavigationManager.NavigateTo($"/project/{Project.Id}");
        }
        else
        {
            // Handle the project update error, display an error message, or perform other actions
            ErrorMessage = "Failed to update project";
        }
    }
}
