@page "/create-project"
@using OpenGitSync.Shared.DataTransferObjects;
@layout MainLayout

<h3>Create Project</h3>

@if (createResult != null)
{
    <div class="alert @(createResult.Success ? "alert-success" : "alert-danger")">
        @createResult.Message
    </div>
}

<EditForm Model="projectModel" OnValidSubmit="AddProject">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="name">Project Name:</label>
        <InputText id="name" class="form-control" @bind-Value="@projectModel.Name" />
        <ValidationMessage For="@(() => projectModel.Name)" />
    </div>

    <div class="form-group">
        <label for="description">Project Description:</label>
        <InputTextArea id="description" class="form-control" @bind-Value="@projectModel.Description" />
        <ValidationMessage For="@(() => projectModel.Description)" />
    </div>

    <div class="form-group">
        <label for="repository1Url">Repository A:</label>
        <InputText id="repositoryA" class="form-control" @bind-Value="@projectModel.RepositoryA" />
        <ValidationMessage For="@(() => projectModel.RepositoryA)" />
    </div>

    <div class="form-group">
        <label for="repository2Url">Repository B:</label>
        <InputText id="repositoryB" class="form-control" @bind-Value="@projectModel.RepositoryB" />
        <ValidationMessage For="@(() => projectModel.RepositoryB)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Create Project</button>
    </div>
</EditForm>

@code {
    private ProjectCreateDto projectModel = new ProjectCreateDto();
    private CreateResultDTO createResult;

    private async Task AddProject()
    {
        // Call the project creation service or API to create the project
        // Example: createResult = await projectService.CreateProjectAsync(projectModel);
        // Show a success or error message based on the create result
    }
}
