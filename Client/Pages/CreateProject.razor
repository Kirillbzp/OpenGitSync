@page "/create-project"
@using Microsoft.AspNetCore.Components.Forms
@using OpenGitSync.Client.Services
@using OpenGitSync.Shared.DataTransferObjects;
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]
@inject NavigationManager NavigationManager
@inject IProjectService ProjectService

<PageTitle>Create Project</PageTitle>

<h3>Create Project</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm EditContext="editContext" OnValidSubmit="HandleCreateProject">
        <DataAnnotationsValidator />

        <div class="card mt-4">
            <div class="card-body">
                <h5 class="card-title">Project Information</h5>

                <div class="form-group">
                    <label for="name">Name</label>
                <InputText type="text" id="name" class="form-control" placeholder="Enter project name" @bind-Value="Project.Name" />
                    <ValidationMessage For="@(() => Project.Name)" />
                </div>

                <div class="form-group">
                    <label for="description">Description</label>
                <textarea id="description" class="form-control" placeholder="Enter project description" @bind="Project.Description"></textarea>
                </div>

                <div class="form-group">
                <button type="submit" class="btn btn-primary">Create Project</button>
                </div>
            </div>
        </div>
    </EditForm>

@code {
    private CreateProjectDto Project { get; set; } = new CreateProjectDto();
    private string ErrorMessage { get; set; }
    [Inject] protected ToastService ToastService { get; set; } = default!;
    private EditContext editContext;

    protected override async Task OnInitializedAsync()
    {
        editContext = new EditContext(Project);
    }

    private async Task HandleCreateProject()
    {
        // Make an API request to create the project
        var (isSuccess, createdProject) = await ProjectService.CreateProject(Project); ;

        if (isSuccess)
        {
            // Project creation successful, redirect to the project details page or perform other actions
            ToastService.Notify(new(ToastType.Success, $"Project created successfully."));
            NavigationManager.NavigateTo($"/edit-project/{createdProject.Id}");
        }
        else
        {
            // Handle the project creation error, display an error message, or perform other actions
            ToastService.Notify(new(ToastType.Danger, $"Failed to create project."));
        }
    }
}
