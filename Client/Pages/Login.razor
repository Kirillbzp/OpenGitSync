@page "/login"
@layout MainLayout

<h3>User Login</h3>

@if (loginResult != null)
{
    <div class="alert @(loginResult.Success ? "alert-success" : "alert-danger")">
        @loginResult.Message
    </div>
}

<EditForm Model="loginModel" OnValidSubmit="LoginUser">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="@loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" type="password" @bind-Value="@loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Login</button>
    </div>
</EditForm>

@code {
    private LoginDto loginModel = new LoginDto();
    private LoginResultDto loginResult;

    private async Task LoginUser()
    {
        // Call the login service or API to authenticate the user
        // Example: loginResult = await userService.LoginUserAsync(loginModel);
        // Show a success or error message based on the login result
    }
}
