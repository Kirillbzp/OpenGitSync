@page "/create-repository"
@layout MainLayout

<h3>Create Repository</h3>

@if (createResult != null)
{
    <div class="alert @(createResult.Success ? "alert-success" : "alert-danger")">
        @createResult.Message
    </div>
}

<EditForm Model="repositoryModel" OnValidSubmit="CreateRepository">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="name">Repository Name:</label>
        <InputText id="name" class="form-control" @bind-Value="@repositoryModel.Name" />
        <ValidationMessage For="@(() => repositoryModel.Name)" />
    </div>

    <div class="form-group">
        <label for="url">Repository URL:</label>
        <InputText id="url" class="form-control" @bind-Value="@repositoryModel.Url" />
        <ValidationMessage For="@(() => repositoryModel.Url)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Create Repository</button>
    </div>
</EditForm>

@code {
    private RepositoryCreateDto repositoryModel = new RepositoryCreateDto();
    private CreateResultDto createResult;

    private async Task CreateRepository()
    {
        // Call the repository creation service or API to create the repository
        // Example: createResult = await repositoryService.CreateRepositoryAsync(repositoryModel);
        // Show a success or error message based on the create result
    }
}
